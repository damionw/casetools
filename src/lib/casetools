#! /usr/bin/env bash

package_name=casetools
first_name="${BASH_SOURCE[0]}"
actual_name="$(readlink -f "${first_name}")"
local_path="$(dirname "${actual_name}")"

#===================================================================================
#                                Defaults
#===================================================================================
export CASETOOLS_BASE="${CASETOOLS_BASE:-${HOME}/Projects}"
export CASETOOLS_CASE="${CASETOOLS_CASE}"
export CASETOOLS_HOME="${CASETOOLS_BASE}/${CASETOOLS_CASE}"

#===================================================================================
#                                Settings
#===================================================================================
export __CASETOOLS_VERSIONS__="$(
    find "${local_path}/${package_name}"-[.0-9]* -maxdepth 0 -mindepth 0 -type d -printf "%f\n" |
    awk -F- '{print $NF;}' |
    sort -nr
)"

export CASETOOLS_VERSION="$(
    echo "${__CASETOOLS_VERSIONS__}" | {
        if [ -z "$1" ]
        then
            head -1
        elif grep '^'"$1"'$'
        then
            :
        else
            echo "No version $1 found" >&2
        fi
    }
)"

if [ -z "${CASETOOLS_VERSION}" ]
then
    return 102
fi

lib_path="${local_path}/${package_name}-${CASETOOLS_VERSION}"
share_path="$(readlink -f "${local_path}/../share/${package_name}")"

export CASETOOLS_SUBCOMMANDS="${lib_path}/subcommands"
export CASETOOLS_SHARE="${share_path}"

. "${lib_path}/logging"
. "${lib_path}/option_parsing"
. "${lib_path}/exceptions"
. "${lib_path}/cases"
. "${lib_path}/paths"
. "${lib_path}/cloning"
. "${lib_path}/packaging"
. "${lib_path}/notebooks"
. "${lib_path}/suites"
. "${lib_path}/settings"
. "${lib_path}/virtualenv"
. "${lib_path}/url"

casetools::version() {
    echo "${CASETOOLS_VERSION}"
}

casetools::versions() {
    echo "${__CASETOOLS_VERSIONS__}"
}

casetools::subcommands::path() {
    if [ -n "${CASETOOLS_SUBCOMMANDS}" -a -d "${CASETOOLS_SUBCOMMANDS}/." ]
    then
        echo "${CASETOOLS_SUBCOMMANDS}"
    fi
}

casetools::share::path() {
    if [ -n "${CASETOOLS_SHARE}" -a -d "${CASETOOLS_SHARE}/." ]
    then
        echo "${CASETOOLS_SHARE}"
    fi
}

casetools::cases::path() {
    if [ -z "${CASETOOLS_BASE}" -o ! -d "${CASETOOLS_BASE}" ]
    then
        return 97
    fi
    
    echo "${CASETOOLS_BASE}"
}

casetools::subcommands() {
    find "$(casetools::subcommands::path)/" -mindepth 1 -maxdepth 1 -type f -executable -printf "%f\n" 2>/dev/null | sort
}

hash -r
