#! /usr/bin/env bash

first_name="${BASH_SOURCE[0]}"
actual_name="$(readlink -f "${first_name}")"
local_path="$(dirname "${actual_name}")"

logging::set_severity() {
    export __logging_severity__="${1}"
}

logging::get_severity() {
    echo "${__logging_severity__:-info}" | tr '[A-Z]' '[a-z]'
}

logging::ordered_severities() {
    sed -e 's/^[ ]*//g' -e '/^$/d' <<<"
        fatal
        error
        warning
        info
        debug
    "
}

logging::get_levels() {
    local _target="$(logging::get_severity)"
    local _severity=

    logging::ordered_severities | while read _severity
    do
        echo "${_severity}"

        if [ "${_severity}" = "${_target}" ]
        then
            break
        fi
    done
}

logging::format() {
    local _retval=$?
    local _mode="${1}"
    local _pid=$$
    shift

    if (logging::get_levels | grep -q '^'"${_mode}"'$')
    then
        echo "$(date '+%Y-%m-%d %H:%M:%S') [$(echo "${_mode}" | tr '[a-z]' '[A-Z]')] <${_pid}>: $@" >&2
    fi

    return ${_retval}
}

logging::private::_generate_setters() {
    local _severity=

    logging::ordered_severities | while read _severity
    do
        sed -e 's/^[ ]*//g' <<< "
            logging::set_${_severity}_severity() {
                logging::set_severity ${_severity}
            }
        "
    done
}

logging::private::_generate_reporters() {
    local _severity=

    logging::ordered_severities | while read _severity
    do
        sed -e 's/^[ ]*//g' <<< "
            logging::${_severity}() {
                logging::format ${_severity} "'"$@"'"
                $([ "${_severity}" = fatal ] && echo exit 255)
            }
        "
    done
}

eval "$(logging::private::_generate_reporters)"
eval "$(logging::private::_generate_setters)"

logging::notify() {
    local _summary _message _retval=$?

    _summary="${1:?No summary supplied}" || return ${_retval}
    shift
    _message="$@"

    DISPLAY=${DISPLAY:-:0.0} notify-send --category="email" "${_summary}" "${_message}" >&2

    return ${_retval}
}

